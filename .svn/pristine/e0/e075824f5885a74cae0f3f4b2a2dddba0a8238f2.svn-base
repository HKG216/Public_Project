using KMU.HisOrder.MVC.Models;
using Microsoft.AspNetCore.Authentication.Cookies;
using Microsoft.AspNetCore.Authentication;
using Microsoft.AspNetCore.Mvc;
using System.Security.Claims;
using Microsoft.AspNetCore.Authorization;
using KMU.HisOrder.MVC.Areas.HisOrder.Models;

namespace KMU.HisOrder.MVC.Controllers
{
    public class LoginController : Controller
    {
        private readonly KMUContext _db;
        private readonly int Account_ID_maximum_length = 7;
        private readonly int Mobile_Phone_Number_minimum_length = 4;
        private readonly int password_minimum_length = 8;
        private readonly string UserCategory_Coderefs_RefCodetype = "User_Category";

        public LoginController(KMUContext db)
        {
            _db = db;
        }

        [AllowAnonymous]//如須例外排除不需要驗證，請加上[AllowAnonymous]
        public IActionResult Index()
        {
            return View("index");
        }

        [HttpPost]
        [AllowAnonymous]//如須例外排除不需要驗證，請加上[AllowAnonymous]
        public ActionResult doLogin(string username, string password)
        {
            ViewBag.notice = null;

            if (string.IsNullOrWhiteSpace(username))
            {
                ViewBag.notice = "User Name cannot be null";
            }

            if (string.IsNullOrWhiteSpace(password))
            {
                ViewBag.notice = "Password cannot be null";
            }

            string error_login_message = null;

            if (ViewBag.notice == null)
            {
                LoginPost loginPostContext = new LoginPost();
                loginPostContext.User_IDNo= username;
                loginPostContext.User_Password= password;
                error_login_message = Login(loginPostContext);
            }
            else 
            {
                error_login_message = ViewBag.notice;
            }


            if (error_login_message == null)
            {// login success

                //var _loginDto = new LoginDTO() { EMPCODE = "1050325", EMPNAME="Rongjie Liu" };

                //HttpContext.Session.SetObject("LoginDTO", _loginDto);

                return RedirectToAction("Index", "Home");
            }
            else
            {// login fail
                TempData["User_Login_Fail"] = "Login failed";//error_login_message;
                return RedirectToAction("Index");
            }

            //if(username =="admin" && password == "admin")
            //{
            //    return RedirectToAction("Index", "Home");
            //}
            //else
            //{
            //    return RedirectToAction("Index");//return null;
            //}








        }

        [AllowAnonymous]//如須例外排除不需要驗證，請加上[AllowAnonymous]
        public IActionResult NotLogin()
        {
            TempData["User_Login_Fail"] = "not signed in！Please login first";
            return RedirectToAction("Index");
        }

        public IActionResult NotAuth()//當選擇的頁面「沒有權限瀏覽時」經由此路由返回首頁
        {
            TempData["Error_Messages"] = "Your account does not have permission to use the item you clicked";//您的帳號沒有權限使用您點選的項目
            return RedirectToAction("Index", "Home");//返回首頁
        }

        //加入下方會自動檢查是否有認證
        //[Authorize]//改成設定在Program.cs全專案都適用登入驗證
        public IActionResult logout()
        {//登出 

            run_logout();
            //TempData["User_Login_Fail"] = "Successfully logged out, please log in again";
            return RedirectToAction("Index");
        }

        private void run_login(string User_ID,bool Frist_Login_Must_Change_Password=false)
        {
            var check_pwok = _db.KmuUsers.Where(x =>
                                                x.UserIdno == User_ID//obj.User_IDNo
                                                                     //        &&
                                                                     //x.UserPassword == obj.User_Password
                                        );

if (check_pwok.Count() == 1)
{

            //依據2022.10.11會議內容將姓名同步開3欄
            //(比照病歷基本檔 TABLE NAME: SOMACHART)
            string user_name_firstname = check_pwok.FirstOrDefault().UserNameFirstname;
            string user_name_midname = check_pwok.FirstOrDefault().UserNameMidname;
            string user_name_lastname = check_pwok.FirstOrDefault().UserNameLastname;
            //依據2022.10.24會議內容將姓名之間用空白鍵區隔
            string newUserName = user_name_firstname + "　" + user_name_midname + "　" + user_name_lastname;

            var claims = new List<Claim>
            {

                //       new Claim("User_ID", obj.User_IDNo),
                //       new Claim("User_Name", newUserName),

                //new Claim(ClaimTypes.Name, check_pwok.FirstOrDefault().UserName),
                //new Claim("FullName", user.Name),
                //new Claim(ClaimTypes.Role, "Administrator")
            };

            //2022.10.27將使用者登入資訊同步存取至 Session 方便大家一次取用減少重工
            var _loginDto = new LoginDTO() { EMPCODE = User_ID, EMPNAME = newUserName };
            HttpContext.Session.SetObject("LoginDTO", _loginDto);

            if (Frist_Login_Must_Change_Password == true)
            {
                string Hard_Code_ProjectId = "Frist_Login";
                //將每一筆權限加入(支援多筆)
                claims.Add(new Claim(ClaimTypes.Role, Hard_Code_ProjectId));
                claims.Add(new Claim("User_auth_page_Name「" + Hard_Code_ProjectId + "」", Hard_Code_ProjectId));
            }
            else
            {

                //讀取該使用者可瀏覽的權限
                var get_this_user_can_view_page_auth = _db.KmuAuths.Where(x =>
                                        x.UserIdno == User_ID
                                );

                foreach (var claim in get_this_user_can_view_page_auth)
                {
                    //將每一筆權限加入(支援多筆)
                    claims.Add(new Claim(ClaimTypes.Role, claim.ProjectId));
                    claims.Add(new Claim("User_auth_page_Name「" + claim.ProjectId + "」", claim.ProjectId));
                }
            }


            var claimsIdentity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
            HttpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme, new ClaimsPrincipal(claimsIdentity));
}//check_can_find_Account ID
        }

        private void run_logout() 
        {
            HttpContext.SignOutAsync(CookieAuthenticationDefaults.AuthenticationScheme);

            HttpContext.Session.Clear();
            const string Session_Key = "LoginDTO";
            HttpContext.Session.SetObject(Session_Key, null);
        }

        public ActionResult AdminView()
        {

            return View("/Home/index");
        }

        private string Login(LoginPost obj)
        {
            //ModelState.Remove("Creator");//移除驗證
            //ModelState.Remove("User_Name");//移除驗證

            bool Frist_Login_Must_Change_Password = false;

            if (ModelState.IsValid)
            {
                //確認帳號是否存在
                var check_id_existed = _db.KmuUsers.Where(x => x.UserIdno == obj.User_IDNo);
                if (check_id_existed.Count() == 0)
                {
                    return "This Username is not found";
                    //ModelState.AddModelError("User_IDNo", "This User_IDNo is not found");
                }
                else
                {
                    //確認是不是第一次登入
                    var account_info = check_id_existed.FirstOrDefault();

                    //確認狀態是否可以登入
                    if (account_info.AccountStatus != "1") 
                    {
                        return "This Account status does not allow login.";
                    }


                    if (account_info.UserMobilePhone == account_info.UserPassword) 
                    {
                        Frist_Login_Must_Change_Password = true;
                        //驗證 
                        obj.User_Password = obj.User_Password;
                    }
                    else
                    {                    
                    //驗證 
                    obj.User_Password = CreateMD5(obj.User_Password);
                    }

                    //確認密碼是否正確
                    var check_pwok = _db.KmuUsers.Where(x =>
                                                x.UserIdno == obj.User_IDNo
                                                        &&
                                                x.UserPassword == obj.User_Password
                                        );

                    if (check_pwok.Count() == 1)
                    {
                        run_login(obj.User_IDNo, Frist_Login_Must_Change_Password);
                        //TempData["User_Login_ID"] = obj.User_IDNo;
                        //TempData["User_Login_Name"] = check_pwok.FirstOrDefault().User_Name;
                        //return RedirectToAction("User_List");
                        //                        return obj.User_IDNo + "登入成功！" + "「" + check_pwok.FirstOrDefault().User_Name + "」" + "您好";
                        return null;
                    }
                    else
                    {
                        //ModelState.AddModelError("User_Password", "This User_Password is not match");
                        return "This Username_Password is not match";
                    }
                }
            }

            //return View(obj);
            return "傳入的內容有缺少資料";
        }
        public class LoginPost
        {
            public string User_IDNo { get; set; }
            public string User_Password { get; set; }
        }

        [AllowAnonymous]//如須例外排除不需要驗證，請加上[AllowAnonymous]
        public IActionResult forgot_password()
        {
            return View("ForgotPassword");
        }

        [HttpPost]//2022.11.18上午10點37分與淑文組長討論後，改成先將密碼設定成手機號碼
        [AllowAnonymous]//如須例外排除不需要驗證，請加上[AllowAnonymous]
        public ActionResult forgotPasswordDoSettingMobileNumberAsDefaultPassword(string username, string PhoneNumber)
        {
            string check_input_error_message = null;

            if (string.IsNullOrWhiteSpace(username))
            {
                check_input_error_message += "Account ID cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(PhoneNumber))
            {
                check_input_error_message += "Mobile Phone Number cannot be null.";
            }

            

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("forgot_password");
            }

            string error_message = null;
            error_message = ResetPasswordFromUserMobileNumberViaForgotPassword(username, PhoneNumber);


            if (error_message == null)
            {// ResetPassword success
                TempData["Show_User_Messages"] = "Setting Mobile Number as default password success！！ Please Reset password to Activate account！";
                run_login(username,true);//自動登入，並且開啟第一次登入權限，限制一定要改密碼才行
                return RedirectToAction("change_password");
            }
            else
            {// ResetPassword fail
                TempData["Show_User_Messages"] = error_message;
                return RedirectToAction("forgot_password");
            }
        }


        private string ResetPasswordFromUserMobileNumberViaForgotPassword(string User_ID, string User_mobile_phone)
        {
            string ResetPasswordErrorMessage = null;

            //驗證 
            //User_Password = CreateMD5(User_Password);

            //確認密碼是否正確
            var check_Nowpwok = _db.KmuUsers.Where(x =>
                                        x.UserIdno == User_ID
                                                &&
                                        x.UserMobilePhone == User_mobile_phone
                                );

            if (check_Nowpwok.Count() == 1)
            {//執行密碼變更
                var update_obj = check_Nowpwok.FirstOrDefault();
                update_obj.UserPassword = User_mobile_phone;//初始化成第一次登入【不加密】【不加密】【不加密】

                _db.KmuUsers.Update(update_obj);
                _db.SaveChanges();
            }
            else
            {
                ResetPasswordErrorMessage = "This  ID and Mobile Phone Number  is not match";
            }

            return ResetPasswordErrorMessage;
        }

        [HttpPost]
        [AllowAnonymous]//如須例外排除不需要驗證，請加上[AllowAnonymous]
        public ActionResult forgotPasswordDoResetPassword(string username, string PhoneNumber, string NewPassword, string NewPassword2)
        {
            string check_input_error_message = null;

            if (string.IsNullOrWhiteSpace(username))
            {
                check_input_error_message += "Account ID cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(PhoneNumber))
            {
                check_input_error_message += "Mobile Phone Number cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(NewPassword))
            {
                check_input_error_message += "New Password cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(NewPassword2))
            {
                check_input_error_message += "New Password Again cannot be null.";
            }

            if (check_input_error_message != null)
            {
                TempData["User_ResetPassword_Fail"] = check_input_error_message;
                return RedirectToAction("forgot_password");
            }

            if (NewPassword.Length < password_minimum_length)
            {//密碼最小限制
                check_input_error_message += "New Password minimum length" + password_minimum_length;
            }

            if (NewPassword != NewPassword2)
            {
                check_input_error_message += "Two input password must be consistent.";//两次输入的密码必须一致 英语怎么说？_百度知道  https://zhidao.baidu.com/question/286212624.html
            }

            if (check_input_error_message != null)
            {
                TempData["User_ResetPassword_Fail"] = check_input_error_message;
                return RedirectToAction("forgot_password");
            }





            string error_ResetPassword_message = null;
            error_ResetPassword_message = ResetPasswordViaForgotPassword(username,  PhoneNumber, NewPassword);


            if (error_ResetPassword_message == null)
            {// ResetPassword success
                TempData["User_Login_Fail"] = "ResetPassword success！！ Please use reset password to login！";
                return RedirectToAction("Index");
            }
            else
            {// ResetPassword fail
                TempData["User_ResetPassword_Fail"] = error_ResetPassword_message;
                return RedirectToAction("forgot_password");
            }
        }


        private string ResetPasswordViaForgotPassword(string User_ID, string User_mobile_phone, string New_User_Password)
        {
            string ResetPasswordErrorMessage=null;

            //驗證 
            //User_Password = CreateMD5(User_Password);

            //確認密碼是否正確
            var check_Nowpwok = _db.KmuUsers.Where(x =>
                                        x.UserIdno == User_ID
                                                &&
                                        x.UserMobilePhone == User_mobile_phone
                                );

            if (check_Nowpwok.Count() == 1)
            {//執行密碼變更
                var update_obj = check_Nowpwok.FirstOrDefault();
                update_obj.UserPassword = CreateMD5(New_User_Password);

                _db.KmuUsers.Update(update_obj);
                _db.SaveChanges();
            }
            else
            {
                ResetPasswordErrorMessage = "This  ID and Mobile Phone Number  is not match";
            }

            return ResetPasswordErrorMessage;
        }

        public IActionResult change_password()
        {
            ViewBag.PasswordChangeRuleMinLength = password_minimum_length.ToString();
            return View("ChangePassword");
        }

        [HttpPost]
        public ActionResult DoChangePassword(string Password, string NewPassword, string NewPassword2)
        {
            string check_input_error_message = null;

            if (string.IsNullOrWhiteSpace(Password))
            {
                check_input_error_message += "Password cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(NewPassword))
            {
                check_input_error_message += "New Password cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(NewPassword2))
            {
                check_input_error_message += "New Password Again cannot be null.";
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("change_password");
            }

            if (NewPassword != NewPassword2)
            {
                check_input_error_message += "Two input  New  password must be consistent.";//两次输入的密码必须一致 英语怎么说？_百度知道  https://zhidao.baidu.com/question/286212624.html
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("change_password");
            }

            if (NewPassword.Length < password_minimum_length)
            {//密碼最小限制
                check_input_error_message += "New Password minimum length" + password_minimum_length;
            }

            if ((NewPassword.Any(char.IsUpper)==false) || (NewPassword.Any(char.IsLower) == false))
            {//密碼必須同時包含大小寫//參考資料 https://stackoverflow.com/a/20032476
                check_input_error_message += "New Password must Contain both upper and lower case characters (e.g., a-z, A-Z).";
            }

            if (Password ==  NewPassword)
            {//新舊密碼一樣
                check_input_error_message += "Your Password not Change.";
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("change_password");
            }


            string get_user_id = get_login_useridno();

            string error_ChangePassword_message = null;
            error_ChangePassword_message = ResetPasswordViaChangePassword(get_user_id, Password, NewPassword);


            if (error_ChangePassword_message == null)
            {// ChangePassword success
                run_logout();
                TempData["User_Login_Fail"] = "ChangePassword success！！ Please use reset password to login！";
                return RedirectToAction("Index");
            }
            else
            {// ChangePassword fail
                TempData["Show_User_Messages"] = error_ChangePassword_message;
                return RedirectToAction("change_password");
            }
        }


        private string ResetPasswordViaChangePassword(string User_ID, string Old_User_Password, string New_User_Password)
        {
            string ResetPasswordErrorMessage = null;
            //驗證 
            string User_Password = null;

            //確認帳號是否存在
            var check_id_existed = _db.KmuUsers.Where(x => x.UserIdno == User_ID);
            if (check_id_existed.Count() == 0)
            {
                return "This Username 「"+ User_ID + "」 is not found";
            }
            else
            {
                //確認是不是第一次登入
                var account_info = check_id_existed.FirstOrDefault();
                if (account_info.UserMobilePhone == account_info.UserPassword)
                {//第一次登入  密碼未加密
                    //驗證 
                    User_Password = Old_User_Password;
                }
                else
                {
                    //驗證 
                    User_Password = CreateMD5(Old_User_Password);
                }
            }


            //確認密碼是否正確
            var check_Nowpwok = _db.KmuUsers.Where(x =>
                                        x.UserIdno == User_ID
                                                &&
                                        x.UserPassword == User_Password
                                );

            if (check_Nowpwok.Count() == 1)
            {//執行密碼變更
                var update_obj = check_Nowpwok.FirstOrDefault();
                update_obj.UserPassword = CreateMD5(New_User_Password);

                _db.KmuUsers.Update(update_obj);
                _db.SaveChanges();
            }
            else
            {
                ResetPasswordErrorMessage = "This  Password  is not match";
            }

            return ResetPasswordErrorMessage;
        }

        public IActionResult change_mobile_phone()
        {
            ViewBag.MobilePhoneNumberminlength = Mobile_Phone_Number_minimum_length.ToString();
            return View("ChangeMobilePhone");
        }

        [HttpPost]
        public ActionResult DoChangeMobilePhone(string MobilePhone, string NewMobilePhone, string NewMobilePhone2)
        {
            string check_input_error_message = null;

            if (string.IsNullOrWhiteSpace(MobilePhone))
            {
                check_input_error_message += "Mobile Phone cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(NewMobilePhone))
            {
                check_input_error_message += "New Mobile Phone cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(NewMobilePhone2))
            {
                check_input_error_message += "New Mobile Phone Again cannot be null.";
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("change_mobile_phone");
            }

            if (NewMobilePhone != NewMobilePhone2)
            {
                check_input_error_message += "Two input  New Mobile Phone must be consistent.";//两次输入的密码必须一致 英语怎么说？_百度知道  https://zhidao.baidu.com/question/286212624.html
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("change_mobile_phone");
            }

            if (NewMobilePhone.Length < Mobile_Phone_Number_minimum_length)
            {//最小限制(2022.11.19解除原先比照密碼，基於初始化密碼為手機號碼)
                check_input_error_message += "New Mobile Phone minimum length" + Mobile_Phone_Number_minimum_length;
            }

            if (MobilePhone == NewMobilePhone)
            {//新舊一樣
                check_input_error_message += "Your Mobile Phone not Change.";
            }

            int StringToInt;
            if (int.TryParse(NewMobilePhone,out StringToInt) == false)//參考資料  https://learn.microsoft.com/zh-tw/dotnet/api/system.int32.tryparse?view=net-6.0
            {//Type Check
                check_input_error_message += "Your New Mobile Phone not numbers.";
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("change_mobile_phone");
            }


            string get_user_id = get_login_useridno();

            string error_ChangeMobilePhone_message = null;
            error_ChangeMobilePhone_message = ResetMobilePhone(get_user_id, MobilePhone, NewMobilePhone);


            if (error_ChangeMobilePhone_message == null)
            {// Change success                
                TempData["Show_User_Messages"] = "Change MobilePhone success！！";
                return RedirectToAction("change_mobile_phone");
            }
            else
            {// Change fail
                TempData["Show_User_Messages"] = error_ChangeMobilePhone_message;
                return RedirectToAction("change_mobile_phone");
            }
        }


        private string ResetMobilePhone(string User_ID, string Old_User_MobilePhone, string New_User_MobilePhone)
        {
            string ResetErrorMessage = null;
            //驗證 
            string User_MobilePhone = null;

            //確認帳號是否存在
            var check_id_existed = _db.KmuUsers.Where(x => x.UserIdno == User_ID);
            if (check_id_existed.Count() == 0)
            {
                return "This Username 「" + User_ID + "」 is not found";
            }
            else
            {
                //驗證 
                User_MobilePhone = Old_User_MobilePhone;
            }


            //確認是否正確
            var check_Nowpwok = _db.KmuUsers.Where(x =>
                                        x.UserIdno == User_ID
                                                &&
                                        x.UserMobilePhone == User_MobilePhone
                                );

            if (check_Nowpwok.Count() == 1)
            {//執行變更
                var update_obj = check_Nowpwok.FirstOrDefault();
                if (update_obj.UserPassword == update_obj.UserMobilePhone)
                {//在執行變更前，先檢查確認是否[第一次登入]尚未變更過密碼
                    return "【change failed】You must have changed your password first.";
                }
                update_obj.UserMobilePhone = New_User_MobilePhone;

                _db.KmuUsers.Update(update_obj);
                _db.SaveChanges();
            }
            else
            {
                ResetErrorMessage = "This  MobilePhone  is not match";
            }

            return ResetErrorMessage;
        }

        [Authorize(Roles = "UserManagement")]//登入後可依據設定的 專案名稱 project_id 作為判斷依據
        public IActionResult user_list(string search_string)
        {
            ViewData["GetSeatchString"] = search_string;
            IEnumerable<KmuUser> objKmuUserList = null;
                if (string.IsNullOrWhiteSpace(search_string))
                {
                    objKmuUserList = _db.KmuUsers;//.ToList();
                }
                else 
                {
                    objKmuUserList = _db.KmuUsers
                    .Where(s=>s.UserIdno.Contains(search_string)
                    || s.UserNameFirstname.Contains(search_string)
                    || s.UserNameMidname.Contains(search_string)
                    || s.UserNameLastname.Contains(search_string));//.ToList();
                    TempData["Show_User_Messages"] += "Searching for \""+ search_string + "\" keyword found "+ objKmuUserList .Count()+ " records";
                }
            objKmuUserList = objKmuUserList.OrderBy(o => o.UserIdno);
            return View("UserList", objKmuUserList);
        }

        [Authorize(Roles = "UserManagement")]//登入後可依據設定的 專案名稱 project_id 作為判斷依據
        public IActionResult auth_setting(string account_id)
        {
            IEnumerable<KmuUser> objKmuUserList = _db.KmuUsers.Where(x => x.UserIdno == account_id).OrderByDescending(o => o.CreateTime);//.ToList(); 

            var check_id_existed = objKmuUserList;
            if (check_id_existed.Count() == 0)
            {
                TempData["Show_User_Messages"] = "This Account ID 「" + account_id + "」 is not found";
                return RedirectToAction("user_list");//找不到這個帳號跳回清單
            }
            else 
            {
                //TempData["Show_User_Messages"] = "20221129【施工中：借User List的View測試】您選擇此 This Account ID 「" + account_id + "」 Auth Setting 設定權限";
                ShowUserAuths showUserAuthsView = new ShowUserAuths();
                showUserAuthsView.user_detail = objKmuUserList.FirstOrDefault();

                var get_user_have_auth = _db.KmuAuths.Where(x => x.UserIdno == account_id).OrderByDescending(o => o.CreateTime);
                showUserAuthsView.user_have_auth = get_user_have_auth;

                var get_all_project_list = _db.KmuProjects.OrderBy(o => o.CreateTime);

                List<View_KmuProject> get_all_project_list_to_View = new List<View_KmuProject>();
                foreach (KmuProject one_Project in get_all_project_list)
                {
                    get_all_project_list_to_View.Add(new View_KmuProject(one_Project));
                }

                get_all_project_list_to_View.ToList().ForEach
                (x=> {
                        var check_have_auth = get_user_have_auth.Where(c => c.ProjectId == x.db_KmuProject.ProjectId);
                            if (check_have_auth.Count() != 0)
                            {
                                x.auth_create_time = check_have_auth.FirstOrDefault().CreateTime;
                                x.auth_create_user = check_have_auth.FirstOrDefault().Creator;
                            }
                            else 
                            {
                                x.auth_create_time = null;
                                x.auth_create_user = null;
                            }
                     }                
                );

                showUserAuthsView.all_project_list = get_all_project_list_to_View;
                //showUserAuthsView.all_project_list
                //    .Join(showUserAuthsView.user_have_auth, all_project => all_project.ProjectId, user_have => user_have.ProjectId, (all_project, user_have) => new { all_project , user_have })
                //         .ToList()
                //         .ForEach(x =>
                //         {
                //             x.all_project.Url = x.user_have.CreateTime.ToString();
                //             x.all_project.Creator = x.all_project.ProjectId;
                //         });
                return View("UserAuthSetting", showUserAuthsView);
            }
        }

        [Authorize(Roles = "UserManagement")]//登入後可依據設定的 專案名稱 project_id 作為判斷依據
        public IActionResult account_status_change(string account_id,string login_do)
        {
            IEnumerable<KmuUser> objKmuUserList = _db.KmuUsers.Where(x => x.UserIdno == account_id).OrderByDescending(o => o.CreateTime);//.ToList(); 

            var check_id_existed = objKmuUserList;
            if (check_id_existed.Count() == 0)
            {
                TempData["Show_User_Messages"] = "This Account ID 「" + account_id + "」 is not found";
                return RedirectToAction("user_list");//找不到這個帳號跳回清單
            }
            else
            {
                //確認是否正確
                var check_Nowpwok = check_id_existed;

                string login_do_message = null;

                if (check_Nowpwok.Count() == 1)
                {//執行變更
                    var update_obj = check_Nowpwok.FirstOrDefault();

                    switch (login_do) 
                    {
                        case "Allow_Login":
                            update_obj.AccountStatus = "1";
                            login_do_message = "Can Login";
                            break;
                        case "Close_Login":
                            update_obj.AccountStatus = "0";
                            login_do_message = "Can Not Login";
                            break;
                        default:
                            login_do_message = "do nothing";
                            break;
                    }

                    _db.KmuUsers.Update(update_obj);
                    _db.SaveChanges();
                }

                TempData["Show_User_Messages"] = "This Account ID 「" + account_id + "」 is "+ login_do_message;
                return RedirectToAction("user_list");
            }
        }

        [HttpPost]
        [Authorize(Roles = "UserManagement")] //登入後可依據設定的 專案名稱 project_id 作為判斷依據
        public ActionResult DoUserAuthSetting(List<string> Setting_Auth_Project_ID,string Setting_User_ID)
        {
            string get_admin_id = get_login_useridno();

            string error_message = null;
            error_message = ChangeUserAuthorization(get_admin_id, Setting_Auth_Project_ID, Setting_User_ID);

            if (error_message == null)
            {// Change success                
                TempData["Show_User_Messages"] = "Change Authorization success！！";
                return RedirectToAction("auth_setting", new { account_id = Setting_User_ID });
            }
            else
            {// Change fail
                TempData["Show_User_Messages"] = error_message;
                return RedirectToAction("auth_setting", new { account_id = Setting_User_ID });
            }
        }


        private string ChangeUserAuthorization(string admin_ID, List<string> Auth_Project_ID_string, string User_ID)
        {
            string ResetErrorMessage = null;
            bool change_record = false;

            //確認帳號是否存在
            var check_id_existed = _db.KmuUsers.Where(x => x.UserIdno == User_ID);
            if (check_id_existed.Count() == 0)
            {
                return "This Username 「" + User_ID + "」 is not found";
            }

            DateTime Change_time = DateTime.Now;//同一動作，統一時間點(當下時間))

            //取得使用者目前的權限
            var get_user_have_auth = _db.KmuAuths.Where(x => x.UserIdno == User_ID).OrderByDescending(o => o.CreateTime);
            var get_all_project_list = _db.KmuProjects.OrderBy(o => o.CreateTime);
            //取得全部可設定的權限

            get_all_project_list.ToList().ForEach
            (x => {
                var check_have_auth = get_user_have_auth.Where(c => c.ProjectId == x.ProjectId);
                if (check_have_auth.Count() != 0)
                {//原本就有
                    if (Auth_Project_ID_string.Contains(x.ProjectId) == false) 
                    { //Delete

                        //確認是否正確
                        var check_Nowpwok = _db.KmuAuths.Where(x_get_check =>
                                                    x_get_check.UserIdno == User_ID
                                                            &&
                                                    x_get_check.ProjectId == x.ProjectId
                                            );

                        if (check_Nowpwok.Count() == 1)
                        {//執行變更
                            var delete_obj = check_Nowpwok.FirstOrDefault();
                            _db.KmuAuths.Remove(delete_obj);
                            _db.SaveChanges();
                            change_record = true;

                            //write log
                            KmuAuthsLog log_obj = new KmuAuthsLog();
                            log_obj.UserIdno = User_ID;
                            log_obj.EditType = "ReMove";
                            log_obj.ProjectId = x.ProjectId;

                            log_obj.EditTime = Change_time;
                            log_obj.EditUser = admin_ID;//建立人

                            _db.KmuAuthsLogs.Add(log_obj);
                            _db.SaveChanges();
                        }
                        else
                        {
                            ResetErrorMessage = "This 「"+ User_ID + "」 User Not Have 「"+ x.ProjectId + "」  Auth";
                        }
                    }
                }
                else
                {//原本沒有
                    if (Auth_Project_ID_string.Contains(x.ProjectId) == true)
                    {//Add
                        KmuAuth obj = new KmuAuth();
                        //初始資訊
                        obj.Creator = admin_ID;//建立人
                        obj.CreateTime = Change_time;

                        obj.UserIdno = User_ID;
                        obj.ProjectId = x.ProjectId;

                        _db.KmuAuths.Add(obj);
                        _db.SaveChanges();
                        change_record = true;

                        //write log
                        KmuAuthsLog log_obj = new KmuAuthsLog();
                        log_obj.UserIdno = User_ID;
                        log_obj.EditType = "add";
                        log_obj.ProjectId = x.ProjectId;

                        log_obj.EditTime = Change_time;
                        log_obj.EditUser = admin_ID;//建立人

                        _db.KmuAuthsLogs.Add(log_obj);
                        _db.SaveChanges();
                    }
                }
            }
            );

            //return "admin_ID"+ admin_ID+ "Auth_Project_ID_string" + Auth_Project_ID_string + "User_ID" + User_ID;

            if ((change_record == false) && (ResetErrorMessage == null))
            {
                ResetErrorMessage = "You Choose Auth 「not Change」.";
            }

            return ResetErrorMessage;
        }

        [Authorize(Roles = "UserManagement")]//登入後可依據設定的 專案名稱 project_id 作為判斷依據
        public IActionResult new_account()
        {
            ViewBag.AccountIDmaxlength = Account_ID_maximum_length.ToString();
            ViewBag.MobilePhoneNumberminlength = Mobile_Phone_Number_minimum_length.ToString();
            var get_UserCategory_list = _db.KmuCoderefs.Where(c => c.RefCodetype == UserCategory_Coderefs_RefCodetype);
            return View("NewAccount", get_UserCategory_list);
        }

        [HttpPost]
        [Authorize(Roles = "UserManagement")]//登入後可依據設定的 專案名稱 project_id 作為判斷依據
        public ActionResult DoAddAccount(string Account, string FirstName, string MidName, string LastName, string MobilePhone, string MobilePhone2,string Category, string Sex, string mail, DateTime Birthdate)
        {
            string check_input_error_message = null;
            //string , string , string , string , string , string MobilePhone2
            if (string.IsNullOrWhiteSpace(Account))
            {
                check_input_error_message += "Account ID cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(FirstName))
            {
                check_input_error_message += "First Name cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(MidName))
            {
                check_input_error_message += "Mid Name cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(LastName))
            {
                check_input_error_message += "Last Name cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(MobilePhone))
            {
                check_input_error_message += "Mobile Phone Number cannot be null.";
            }

            //if (string.IsNullOrWhiteSpace(MobilePhone2))
            //{
            //    check_input_error_message += "Mobile Phone Number Again cannot be null.";
            //}

            if (string.IsNullOrWhiteSpace(Sex))
            {
                check_input_error_message += "Sex cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(mail))
            {
                check_input_error_message += "E-mail cannot be null.";
            }
            else
            {
                string check_email_Format_sign = "@";
                if (mail.IndexOf(check_email_Format_sign) == -1)
                {
                    check_input_error_message += "Email " + check_email_Format_sign + " symbol must be filled in.";
                }
            }

            if (Birthdate == null)
            {
                check_input_error_message += "Birth Date cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(Category))
            {
                check_input_error_message += "Category cannot be null.";
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("new_account");
            }

            //if (MobilePhone != MobilePhone2)
            //{
            //    check_input_error_message += "Two input  Mobile Phone Number must be consistent.";//两次输入的密码必须一致 英语怎么说？_百度知道  https://zhidao.baidu.com/question/286212624.html
            //}

            if (_db.KmuCoderefs.Where(c => c.RefCode == Category && c.RefCodetype == UserCategory_Coderefs_RefCodetype).Count() == 0) 
            {
                check_input_error_message += "Category must select a valid item."; 
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("new_account");
            }

            if (Account.Length > Account_ID_maximum_length)
            {//帳號最大長度限制
                check_input_error_message += "Account ID maximum length" + Account_ID_maximum_length;
            }

            if (MobilePhone.Length < Mobile_Phone_Number_minimum_length)
            {//手機號碼最小限制(2022.11.19解除原先比照密碼最小限制)
                check_input_error_message += "Mobile Phone minimum length"+ Mobile_Phone_Number_minimum_length;
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("new_account");
            }


            string get_user_id = get_login_useridno();

            string error_CreateAccount_message = null;
            error_CreateAccount_message = CreateAccount(get_user_id, Account,  FirstName,  MidName,  LastName,  MobilePhone,  Category,  Sex,  mail,  Birthdate);


            if (error_CreateAccount_message == null)
            {// ChangePassword success
                
                TempData["Show_User_Messages"] = "Create 「"+ Account + "」 Account success！！ ";
                return RedirectToAction("user_list", new { search_string = Account });//2022.11.25帶創立的新帳號參數//2022.11.21已可跳到帳號清單//未來可跳到帳號清單
            }
            else
            {// ChangePassword fail
                TempData["Show_User_Messages"] = error_CreateAccount_message;
                return RedirectToAction("new_account");
            }
        }


        private string CreateAccount(string User_ID, string Account_ID, string FirstName, string MidName, string LastName, string MobilePhone, string UserCategory, string Sex_Only_M_or_F, string Email, DateTime Birth_date)
        {
            string CreateAccountErrorMessage = null;           

            //確認帳號是否存在
            var check_id_existed = _db.KmuUsers.Where(x => x.UserIdno == Account_ID);
            if (check_id_existed.Count() != 0)
            {
                CreateAccountErrorMessage= "This Account ID 「" + Account_ID + "」 is already used";
            }
            else
            {
                KmuUser obj = new KmuUser();
                //初始資訊
                obj.Creator = User_ID;//建立人
                obj.CreateTime = DateTime.Now;//當下時間



                obj.UserIdno = Account_ID;
                obj.UserPassword = MobilePhone;
                obj.UserMobilePhone = MobilePhone;

                obj.UserNameFirstname = FirstName;
                obj.UserNameMidname = MidName;
                obj.UserNameLastname = LastName;

                obj.UserCategory = UserCategory;

                obj.UserSex = Sex_Only_M_or_F;
                obj.UserEmail = Email;
                obj.UserBirthDate = Birth_date;

                _db.KmuUsers.Add(obj);
                _db.SaveChanges();
            }          

            return CreateAccountErrorMessage;
        }

        public IActionResult show_account()
        {
            //確認帳號是否存在
            var check_id_existed = _db.KmuUsers.Where(x => x.UserIdno == get_login_useridno());
            if (check_id_existed.Count() == 0)
            {
                TempData["Error_Messages"] = "This Account ID 「" + get_login_useridno() + "」 is not found";
                return RedirectToAction("Index", "Home");//返回首頁
            }

            var chose_one_account = check_id_existed.FirstOrDefault();

            ViewBag.UserCategory = _db.KmuCoderefs.Where(c => c.RefCode == chose_one_account.UserCategory && c.RefCodetype == UserCategory_Coderefs_RefCodetype).First().RefName;

            return View("ShowAccount", chose_one_account);
        }        

        public IActionResult edit_account()
        {
            //確認帳號是否存在
            var check_id_existed = _db.KmuUsers.Where(x => x.UserIdno == get_login_useridno());
            if (check_id_existed.Count() == 0)
            {
                TempData["Error_Messages"] = "This Account ID 「" + get_login_useridno() + "」 is not found";
                return RedirectToAction("Index", "Home");//返回首頁
            }

            return View("EditAccount", check_id_existed.FirstOrDefault());
        }

        [HttpPost]
        public ActionResult DoEditProfile(string Firstname, string Midname, string Lastname, string mail)
        {
            string check_input_error_message = null;

            if (string.IsNullOrWhiteSpace(Firstname))
            {
                check_input_error_message += "First Name cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(Midname))
            {
                check_input_error_message += "Father's Name cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(Lastname))
            {
                check_input_error_message += "Grandfather's Name cannot be null.";
            }

            if (string.IsNullOrWhiteSpace(mail) == false)
            {
                string check_email_Format_sign = "@";
                if (mail.IndexOf(check_email_Format_sign) == -1)
                {
                    check_input_error_message += "Email " + check_email_Format_sign + " symbol must be filled in.";
                }
            }
            else 
            {
                check_input_error_message += "Email cannot be null.";
            }

            if (check_input_error_message != null)
            {
                TempData["Show_User_Messages"] = check_input_error_message;
                return RedirectToAction("edit_account");
            }

            string get_user_id = get_login_useridno();

            string error_Change_message = null;
            error_Change_message = EditUserProfile(get_user_id,  Firstname,  Midname,  Lastname,  mail);


            if (error_Change_message == null)
            {// Change success                
                TempData["Show_User_Messages"] = "Edit Profile success！！";
                run_login(get_user_id);//重跑登入程序載入因為變更的基本資料
                return RedirectToAction("edit_account");
            }
            else
            {// Change fail
                TempData["Show_User_Messages"] = error_Change_message;
                return RedirectToAction("edit_account");
            }
        }


        private string EditUserProfile(string User_ID, string Firstname, string Midname, string Lastname, string mail)
        {
            string ErrorMessage = null;            

            //確認帳號是否存在
            var check_id_existed = _db.KmuUsers.Where(x => x.UserIdno == User_ID);
            if (check_id_existed.Count() == 0)
            {
                return "This Username 「" + User_ID + "」 is not found";
            }

            //確認是否正確
            var check_Nowpwok = check_id_existed;

            if (check_Nowpwok.Count() == 1)
            {//執行變更
                var update_obj = check_Nowpwok.FirstOrDefault();
                if (update_obj.UserPassword == update_obj.UserMobilePhone)
                {//在執行變更前，先檢查確認是否[第一次登入]尚未變更過密碼
                    return "【change failed】You must have changed your password first.";
                }
                update_obj.UserNameFirstname = Firstname;
                update_obj.UserNameMidname = Midname;
                update_obj.UserNameLastname = Lastname;
                update_obj.UserEmail = mail;

                _db.KmuUsers.Update(update_obj);
                _db.SaveChanges();
            }
            else
            {
                ErrorMessage = "Error found multiple accounts with the Account ID";//錯誤找到多筆同樣帳號ID
            }

            return ErrorMessage;
        }

        public string get_login_useridno() 
        {
            //從登入資訊取得帳號
         //var get_user_auth_cookie = HttpContext.User.Claims.ToList();
         //string get_user_id = get_user_auth_cookie.Where(t => t.Type == "User_ID").First().Value;
            //從登入資訊取得帳號

            //2022.10.27將使用者登入資訊同步存取至 Session 方便大家一次取用減少重工

            const string Session_Key = "LoginDTO";
            var get_session = HttpContext.Session.GetObject<KMU.HisOrder.MVC.Areas.HisOrder.Models.LoginDTO>(Session_Key);
            if (get_session == null) 
            {
                return null;
            }
            return get_session.EMPCODE;
        }
        public IActionResult change_session(string name,string idno)
        {//This method is testing session change.
            const string Session_Key = "LoginDTO";
            var get_session = HttpContext.Session.GetObject<KMU.HisOrder.MVC.Areas.HisOrder.Models.LoginDTO>(Session_Key);

            string showMessage = "change_session";

            if (string.IsNullOrWhiteSpace(name) == false)
            {
                get_session.EMPNAME = name;
                showMessage += "、name["+ name + "]";
            }

            if (string.IsNullOrWhiteSpace(idno) == false)
            {
                get_session.EMPCODE = idno;
                showMessage += "、idno["+ idno + "]";
            }
            
            //HttpContext.Session.SetObject(Session_Key, get_session);

            TempData["Error_Messages"] = showMessage;
            return RedirectToAction("Index", "Home");//返回首頁
        }

        //參考資料
        //c# string tomd5 - Google 搜尋
        //c# - Calculate a MD5 hash from a string - Stack Overflow
        //https://stackoverflow.com/a/24031467
        public static string CreateMD5(string input)
        {
            // Use input string to calculate MD5 hash
            using (System.Security.Cryptography.MD5 md5 = System.Security.Cryptography.MD5.Create())
            {
                byte[] inputBytes = System.Text.Encoding.ASCII.GetBytes(input);
                byte[] hashBytes = md5.ComputeHash(inputBytes);

                return Convert.ToHexString(hashBytes); // .NET 5 +

                // Convert the byte array to hexadecimal string prior to .NET 5
                // StringBuilder sb = new System.Text.StringBuilder();
                // for (int i = 0; i < hashBytes.Length; i++)
                // {
                //     sb.Append(hashBytes[i].ToString("X2"));
                // }
                // return sb.ToString();
            }
        }
        //
    }

    public class ShowUserAuths
    {
    
        public KmuUser user_detail { get; set; }
        
        public IEnumerable<KmuAuth> user_have_auth { get; set; }
    
        public IEnumerable<View_KmuProject> all_project_list { get; set; }
        
    }

}

namespace KMU.HisOrder.MVC.Models
{
    public partial class View_KmuProject
    {//感謝子捷提供方法 解決 View 擴增 虛擬欄位的問題
        public KmuProject db_KmuProject;//private KmuProject _KmuProject;

        public View_KmuProject(KmuProject inKmuProject)
        {
            db_KmuProject = inKmuProject;
        }
        public DateTime? auth_create_time { get; set; }

        public string? auth_create_user { get; set; }
    }
}